version: 0.2

# env:
#   git-credential-helper: yes  
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - export PIPELINE_NAME=`echo $CODEBUILD_INITIATOR | cut -c14-`
      - export ID=$(aws codepipeline get-pipeline-state --region $AWS_DEFAULT_REGION --name $PIPELINE_NAME --query 'stageStates[?actionStates[?latestExecution.externalExecutionId==`'${CODEBUILD_BUILD_ID}'`]].latestExecution.pipelineExecutionId' --output text)
      - export TRIGGER=$(aws codepipeline list-pipeline-executions --pipeline $PIPELINE_NAME | jq -r ".pipelineExecutionSummaries[]|select(.pipelineExecutionId==\"$ID\")|.trigger.triggerType")
      - export LAST_SUCCESSFUL_COMMIT_ID=$(aws codepipeline list-pipeline-executions --pipeline-name $PIPELINE_NAME | jq -r '[.pipelineExecutionSummaries[] | select(.status == "Succeeded") | .sourceRevisions[0].revisionId][0]')
      - echo Trigger is $TRIGGER, not Webhook means build all 
  build:
    commands:
      - echo Build started on `date`
      - IMAGE_TAG=test
      - branch=`echo $CODEBUILD_INITIATOR | awk -F'-' '{ print $NF }'`
      - if [ -n "$branch" ]; then IMAGE_TAG=$branch; fi
      - export IMAGE_TAG
      - bash build_and_update.sh $TRIGGER
  post_build:
    commands:
      # Update version file on S3
      - echo Updating build commit in s3://$WEB_BUCKET_NAME/$IMAGE_TAG-info/$VERSION_PATH
      - aws s3 cp s3://$WEB_BUCKET_NAME/$IMAGE_TAG-info/$VERSION_PATH versions.json
      - cat versions.json | jq --arg commit "$CODEBUILD_RESOLVED_SOURCE_VERSION" '.aws|="\($commit)"' > versions.json
      - aws s3 cp versions.json s3://$WEB_BUCKET_NAME.s3.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_TAG-info/$VERSION_PATH
      - aws lambda update-function-configuration --function-name apbs-$IMAGE_TAG-job-L --environment "Variables={CODEBUILD_RESOLVED_SOURCE_VERSION=$CODEBUILD_RESOLVED_SOURCE_VERSION}"
      - echo Build completed on `date`
